---
# This playbook setup Django

- name: Create workspace directory
  file:
    path: "{{ kryten.workspace_directory }}"
    state: directory
  become: yes
  become_user: root
  tags:
    - kryten
    - worksheet
    - upstart

- group:
    name: "{{ kryten.group }}"
    state: present
  become: yes
  become_user: root
- user:
    name: "{{ kryten.user }}"
    shell: /bin/bash
    groups: "{{ kryten.group }},www-data"
    append: yes
    home: "{{ kryten.base_directory }}"
    createhome: yes
    password: "{{ kryten.password | password_hash('sha512') }}"
    update_password: always
  become: yes
  become_user: root

- name: Copy application credentials
  become_user: "{{ kryten.user }}"
  template:
    src: .netrc
    dest: "~/.netrc"
  tags:
    - kryten
    - worksheet
    - delivery
- name: Copy pypi client side config
  become_user: "{{ kryten.user }}"
  template:
    src: .pypirc
    dest: "~/.pypirc"
  tags:
    - kryten
    - worksheet
    - delivery
- name: Copy pip client side config
  become_user: "{{ kryten.user }}"
  template:
    src: pip.conf
    dest: "~/.pip/pip.conf"
  tags:
    - kryten
    - worksheet
    - delivery

- name: Create logs directory
  file:
    path: "{{ kryten.base_directory }}/{{ kryten.log_directory }}"
    state: directory
    owner: "{{ kryten.user }}"
    group: "{{ kryten.group }}"
  become: yes
  become_user: root
  tags:
    - kryten
    - worksheet
    - upstart
- name: "Create configuration directory at {{ kryten.base_directory }}/{{ kryten.config_directory }}"
  file:
    path: "{{ kryten.base_directory }}/{{ kryten.config_directory }}"
    state: directory
    owner: "{{ kryten.user }}"
    group: "{{ kryten.group }}"
  become: yes
  become_user: root
  tags:
    - kryten
    - worksheet
    - upstart
- name: "Create static directory at {{ kryten.static_root }}"
  file:
    path: "{{ kryten.static_root }}"
    state: directory
    owner: "{{ kryten.user }}"
    group: "{{ kryten.group }}"
  become: yes
  become_user: root
  tags:
    - kryten
    - worksheet
    - upstart

- name: "Manually create the initial virtualenv for {{ kryten.user }}:\n Virtual environment path={{ kryten.base_directory }}/{{ kryten.virtualenv_name }}\n Python: {{kryten.python_exec}}"
  become_user: "{{ kryten.user }}"
  command: "virtualenv {{ kryten.base_directory }}/{{ kryten.virtualenv_name }} -p {{kryten.python_exec}}"
  tags:
    - kryten
    - worksheet
    - upstart





